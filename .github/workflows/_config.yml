---
name: config

on:
  workflow_call:
    inputs:
      platforms:
        description: "The platforms to build (CSV)"
        default: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
        required: false
        type: string
    outputs:
      image_name:
        description: "The Docker image name"
        value: felddy/test
      image_archive_artifact_name:
        description: "The name of the image archives artifact"
        value: image-archives
      platforms:
        description: "The platforms to build (CSV)"
        value: ${{ inputs.platforms }}
      platforms_json:
        description: "The platforms to build (JSON)"
        value: ${{ jobs.csv-to-json.outputs.platforms_json }}

permissions:
  contents: read

jobs:
  diagnostics:
    name: "Diagnostics"
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@8ca2b8b2ece13480cda6dacd3511b49857a23c09 # tag=v2.5.1
        with:
          egress-policy: block
          allowed-endpoints: >
            azure.archive.ubuntu.com:443
            azure.archive.ubuntu.com:80
            packages.microsoft.com:443
            www.githubstatus.com:443

      - name: Check GitHub Status
        uses: crazy-max/ghaction-github-status@df4d23a4977438215339cf0fafceda8d9af8a0e5 # tag=v4.0.0
        with:
          overall_threshold: major
          packages_threshold: major_outage

      - name: Dump context
        uses: crazy-max/ghaction-dump-context@8b55fa205ab4530d36f787a4de1009afaaa7f3b4 # tag=v2.1.0

  csv-to-json:
    name: "Convert platforms CSV to JSON"
    runs-on: ubuntu-latest
    outputs:
      platforms_json: ${{ steps.csv-to-json.outputs.platforms_json }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@8ca2b8b2ece13480cda6dacd3511b49857a23c09 # tag=v2.5.1
        with:
          egress-policy: block
          allowed-endpoints: >

      - name: Convert CSV to JSON
        id: csv-to-json
        run: |
          echo "platforms_json=$(echo -n ${{ inputs.platforms }} | jq --raw-input --compact-output 'split(",")')" >> $GITHUB_OUTPUT
